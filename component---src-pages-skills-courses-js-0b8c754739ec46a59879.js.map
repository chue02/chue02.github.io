{"version":3,"file":"component---src-pages-skills-courses-js-0b8c754739ec46a59879.js","mappings":"4KAMA,MAAMA,EAAiB,CACrBC,GAAI,CAAEC,MAAO,UAAWC,WAAY,QACpCC,KAAM,CAAEF,MAAO,UAAWC,WAAY,QACtCE,MAAO,CAAEH,MAAO,UAAWC,WAAY,SAmGzC,UA1FqB,KACnB,MAAMG,GAAgBC,EAAAA,EAAAA,QAAO,KACvB,EAACC,EAAD,EAAaC,IAAiBC,EAAAA,EAAAA,UAAS,IAc7C,OAZAC,WAAU,KAER,MAAMC,GAAS,OAAIJ,GAAYK,MAAK,CAACC,EAAGC,IAElCD,EAAEE,UAAYD,EAAEC,QACXF,EAAEG,GAAGC,cAAcH,EAAEE,IAEvBH,EAAEE,QAAQE,cAAcH,EAAEC,WAEnCP,EAAcG,KACb,CAACJ,IAGF,gBAAC,EAAAW,YAAD,CACEC,MAAK,aAoBLC,OAAQC,IACN,MAAMC,EAAUD,EAAKE,kBAAkBC,MAAMC,KAAI,QAAC,KAAEC,GAAH,SAAcA,EAAKC,eAOpE,OAJ0B,IAAtBpB,EAAWqB,QACbpB,EAAcc,GAId,gBAACO,qBAAD,KACE,6BACE,0BACE,qCACA,oCACA,kCACA,kCACA,yCAGJ,6BACGtB,EAAWkB,KAAI,CAACK,EAAQC,KACvB,MAAM,QAAEhB,EAAF,GAAWC,EAAX,KAAegB,EAAf,KAAqBC,EAArB,SAA2BC,GAAaJ,EAC9C,OACE,sBAAIK,IAAKJ,EAAOK,IAAKC,GAAOhC,EAAciC,QAAQP,GAASM,GACzD,sBAAIE,MAAOxC,EAAegB,IAAY,CAAEb,WAAY,SAAWa,GAC/D,sBAAIyB,UAAU,MAAMxB,GACpB,sBAAIwB,UAAU,QAAQR,GACtB,sBAAIQ,UAAU,QAAQP,GACtB,sBAAIO,UAAU,SACZ,2BACGN,GACC,qBAAGO,KAAMP,EAAU,aAAW,iBAC5B,gBAAC,KAAD,CAAMF,KAAK","sources":["webpack://personal_website/./src/pages/skills/courses.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { Icon } from '@components/icons';\n\nconst categoryColors = {\n  CS: { color: '#32a838', fontWeight: 'bold' },\n  Math: { color: '#328da8', fontWeight: 'bold' },\n  Stats: { color: '#a33441', fontWeight: 'bold' },\n};\n\n/*\nconst TableContainer = styled.div`\n  overflow-x: auto; // Enables horizontal scrolling on smaller screens\n`;\n*/\n\nconst CoursesTable = () => {\n  const revealCourses = useRef([]);\n  const [sortedData, setSortedData] = useState([]);\n\n  useEffect(() => {\n    // Sort data when the component first mounts\n    const sorted = [...sortedData].sort((a, b) => {\n      // Sort by subject first\n      if (a.subject === b.subject) {\n        return a.no.localeCompare(b.no); // Sort by course number if subjects are equal\n      }\n      return a.subject.localeCompare(b.subject); // Sort by subject if they are different\n    });\n    setSortedData(sorted); // Set the sorted data to the state\n  }, [sortedData]);\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allMarkdownRemark(\n            filter: { fileAbsolutePath: { regex: \"/courses/\" } }\n            sort: { fields: [frontmatter___date], order: DESC }\n          ) {\n            edges {\n              node {\n                frontmatter {\n                  subject\n                  no\n                  name\n                  term\n                  external\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const courses = data.allMarkdownRemark.edges.map(({ node }) => node.frontmatter);\n\n        // Once data is fetched, set the sorted data to the state\n        if (sortedData.length === 0) {\n          setSortedData(courses);\n        }\n\n        return (\n          <StyledTableContainer>\n            <thead>\n              <tr>\n                <th>Subject</th>\n                <th>Number</th>\n                <th>Name</th>\n                <th>Term</th>\n                <th>Registrar</th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedData.map((course, index) => {\n                const { subject, no, name, term, external } = course;\n                return (\n                  <tr key={index} ref={el => (revealCourses.current[index] = el)}>\n                    <td style={categoryColors[subject] || { fontWeight: 'bold' }}>{subject}</td>\n                    <td className=\"no\">{no}</td>\n                    <td className=\"name\">{name}</td>\n                    <td className=\"term\">{term}</td>\n                    <td className=\"links\">\n                      <div>\n                        {external && (\n                          <a href={external} aria-label=\"External Link\">\n                            <Icon name=\"External\" />\n                          </a>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </StyledTableContainer>\n        );\n      }}\n    />\n  );\n};\n\nCoursesTable.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default CoursesTable;"],"names":["categoryColors","CS","color","fontWeight","Math","Stats","revealCourses","useRef","sortedData","setSortedData","useState","useEffect","sorted","sort","a","b","subject","no","localeCompare","StaticQuery","query","render","data","courses","allMarkdownRemark","edges","map","node","frontmatter","length","StyledTableContainer","course","index","name","term","external","key","ref","el","current","style","className","href"],"sourceRoot":""}