{"version":3,"file":"component---src-pages-skills-skillset-js-9fe0dad86ffdbad21787.js","mappings":"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","sources":["webpack://personal_website/./src/pages/skills/skillset.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\nimport { srConfig } from '@config';\nimport { KEY_CODES } from '@utils';\nimport sr from '@utils/sr';\nimport { usePrefersReducedMotion } from '@hooks';\n\nconst StyledSkillsetSection = styled.section`\n  max-width: 900px; //TODO: may want to increase this\n\n  .inner {\n    display: flex;\n\n    @media (max-width: 600px) {\n      display: block;\n    }\n\n    // Prevent container from jumping\n    @media (min-width: 700px) {\n      min-height: 340px;\n    }\n  }\n\n  a {\n    color: #1cf3ff;\n  }\n`;\n\nconst StyledTabList = styled.div`\n  position: relative;\n  z-index: 3;\n  width: max-content;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n\n  @media (max-width: 600px) {\n    display: flex;\n    overflow-x: auto;\n    width: calc(100% + 100px);\n    padding-left: 50px;\n    margin-left: -50px;\n    margin-bottom: 30px;\n  }\n  @media (max-width: 480px) {\n    width: calc(100% + 50px);\n    padding-left: 25px;\n    margin-left: -25px;\n  }\n\n  li {\n    &:first-of-type {\n      @media (max-width: 600px) {\n        margin-left: 50px;\n      }\n      @media (max-width: 480px) {\n        margin-left: 25px;\n      }\n    }\n    &:last-of-type {\n      @media (max-width: 600px) {\n        padding-right: 50px;\n      }\n      @media (max-width: 480px) {\n        padding-right: 25px;\n      }\n    }\n  }\n`;\n\nconst StyledTabButton = styled.button`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: var(--tab-height);\n  padding: 0 20px 2px;\n  border-left: 2px solid var(--lightest-navy);\n  background-color: transparent;\n  color: ${({ isActive }) => (isActive ? 'var(--green)' : 'var(--slate)')};\n  font-family: var(--font-mono);\n  font-size: var(--fz-xs);\n  text-align: left;\n  white-space: nowrap;\n\n  @media (max-width: 768px) {\n    padding: 0 15px 2px;\n  }\n  @media (max-width: 600px) {\n    min-width: 120px;\n    padding: 0 15px;\n    border-left: 0;\n    border-bottom: 2px solid var(--lightest-navy);\n    text-align: center;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--light-navy);\n  }\n`;\n\nconst StyledHighlight = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 2px;\n  height: var(--tab-height);\n  border-radius: var(--border-radius);\n  background: var(--green);\n  transform: translateY(calc(${({ activeTabId }) => activeTabId} * var(--tab-height)));\n  transition: transform 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);\n  transition-delay: 0.1s;\n\n  @media (max-width: 600px) {\n    top: auto;\n    bottom: 0;\n    width: 100%;\n    max-width: var(--tab-width);\n    height: 2px;\n    margin-left: 50px;\n    transform: translateX(calc(${({ activeTabId }) => activeTabId} * var(--tab-width)));\n  }\n  @media (max-width: 480px) {\n    margin-left: 25px;\n  }\n`;\n\nconst StyledTabPanels = styled.div`\n  position: relative;\n  width: 100%;\n  margin-left: 20px;\n\n  @media (max-width: 600px) {\n    margin-left: 0;\n  }\n`;\n\nconst StyledTabPanel = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 10px 5px;\n\n  h3 {\n    margin-bottom: 2px;\n    font-size: var(--fz-xxl);\n    font-weight: 500;\n    line-height: 1.3;\n\n    .skill {\n      color: var(--green);\n    }\n  }\n\n  .range {\n    margin-bottom: 25px;\n    color: var(--light-slate);\n    font-family: var(--font-mono);\n    font-size: var(--fz-xs);\n  }\n`;\n\nconst Skillset = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      Skillset: allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/skillset/\" } }\n        sort: { fields: [frontmatter___rank], order: ASC }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              rank\n              skill\n              url\n            }\n            html\n          }\n        }\n      }\n    }\n  `);\n\n  const SkillsetData = data.Skillset.edges;\n\n  const [activeTabId, setActiveTabId] = useState(0);\n  const [tabFocus, setTabFocus] = useState(null);\n  const tabs = useRef([]);\n  const revealContainer = useRef(null);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealContainer.current, srConfig());\n  }, []);\n\n  const focusTab = () => {\n    if (tabs.current[tabFocus]) {\n      tabs.current[tabFocus].focus();\n      return;\n    }\n    // If we're at the end, go to the start\n    if (tabFocus >= tabs.current.length) {\n      setTabFocus(0);\n    }\n    // If we're at the start, move to the end\n    if (tabFocus < 0) {\n      setTabFocus(tabs.current.length - 1);\n    }\n  };\n\n  // Only re-run the effect if tabFocus changes\n  useEffect(() => focusTab(), [tabFocus]);\n\n  // Focus on tabs when using up & down arrow keys\n  const onKeyDown = e => {\n    switch (e.key) {\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setTabFocus(tabFocus - 1);\n        break;\n      }\n\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setTabFocus(tabFocus + 1);\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  };\n\n  return (\n    <StyledSkillsetSection id=\"Skillset\" ref={revealContainer}>\n      <h2>My Skill Set</h2>\n\n      <div className=\"inner\">\n        <StyledTabList role=\"tablist\" aria-label=\"Job tabs\" onKeyDown={e => onKeyDown(e)}>\n          {SkillsetData &&\n            SkillsetData.map(({ node }, i) => {\n              const { skill } = node.frontmatter;\n              return (\n                <StyledTabButton\n                  key={i}\n                  isActive={activeTabId === i}\n                  onClick={() => setActiveTabId(i)}\n                  ref={el => (tabs.current[i] = el)}\n                  id={`tab-${i}`}\n                  role=\"tab\"\n                  tabIndex={activeTabId === i ? '0' : '-1'}\n                  aria-selected={activeTabId === i ? true : false}\n                  aria-controls={`panel-${i}`}\n                >\n                  <span>{skill}</span>\n                </StyledTabButton>\n              );\n            })}\n          <StyledHighlight activeTabId={activeTabId} />\n        </StyledTabList>\n\n        <StyledTabPanels>\n          {SkillsetData &&\n            SkillsetData.map(({ node }, i) => {\n              const { frontmatter, html } = node;\n              const { skill, url, rank } = frontmatter;\n\n              return (\n                <CSSTransition key={i} in={activeTabId === i} timeout={250} classNames=\"fade\">\n                  <StyledTabPanel\n                    id={`panel-${i}`}\n                    role=\"tabpanel\"\n                    tabIndex={activeTabId === i ? '0' : '-1'}\n                    aria-labelledby={`tab-${i}`}\n                    aria-hidden={activeTabId !== i}\n                    hidden={activeTabId !== i}\n                  >\n                    <h3>\n                      <span className=\"skill\">\n                        <a href={url} target=\"_blank\" className=\"inline-link\" rel=\"noreferrer\">\n                          {rank}\n                          {'. '}\n                          {skill}\n                        </a>\n                      </span>\n                    </h3>\n\n                    <div dangerouslySetInnerHTML={{ __html: html }} />\n                  </StyledTabPanel>\n                </CSSTransition>\n              );\n            })}\n        </StyledTabPanels>\n      </div>\n    </StyledSkillsetSection>\n  );\n};\n\nexport default Skillset;\n"],"names":["StyledSkillsetSection","styled","StyledTabList","StyledTabButton","isActive","StyledHighlight","activeTabId","StyledTabPanels","StyledTabPanel","SkillsetData","useStaticQuery","Skillset","edges","setActiveTabId","useState","tabFocus","setTabFocus","tabs","useRef","revealContainer","prefersReducedMotion","usePrefersReducedMotion","useEffect","sr","current","srConfig","focus","length","id","ref","className","role","onKeyDown","e","key","KEY_CODES","preventDefault","map","i","node","skill","frontmatter","onClick","el","tabIndex","html","url","rank","in","timeout","classNames","hidden","href","target","rel","dangerouslySetInnerHTML","__html"],"sourceRoot":""}