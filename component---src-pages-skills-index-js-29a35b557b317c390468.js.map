{"version":3,"file":"component---src-pages-skills-index-js-29a35b557b317c390468.js","mappings":"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","sources":["webpack://personal_website/./src/pages/skills/courses.js","webpack://personal_website/./src/pages/skills/index.js","webpack://personal_website/./src/pages/skills/skillset.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { Icon } from '@components/icons';\n\nconst categoryColors = {\n  CS: { color: '#32a838', fontWeight: 'bold' },\n  Math: { color: '#328da8', fontWeight: 'bold' },\n  Stats: { color: '#a33441', fontWeight: 'bold' },\n};\n\n/*\nconst TableContainer = styled.div`\n  overflow-x: auto; // Enables horizontal scrolling on smaller screens\n`;\n*/\n\nconst StyledTableContainer = styled.table`\n    width: 100%;\n    border-collapse: collapse;\n\n    .hide-on-mobile {\n      @media (max-width: 768px) {\n        display: none;\n      }\n    }\n    tbody tr {\n      &:hover,\n      &:focus {\n        background-color: var(--light-navy);\n      }\n    }\n    th,\n    td {\n      padding: 10px;\n      text-align: left;\n      &:first-child {\n        padding-left: 20px;\n        @media (max-width: 768px) {\n          padding-left: 10px;\n        }\n      }\n      &:last-child {\n        padding-right: 20px;\n        @media (max-width: 768px) {\n          padding-right: 10px;\n        }\n      }\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n    tr {\n      cursor: default;\n      td:first-child {\n        border-top-left-radius: var(--border-radius);\n        border-bottom-left-radius: var(--border-radius);\n      }\n      td:last-child {\n        border-top-right-radius: var(--border-radius);\n        border-bottom-right-radius: var(--border-radius);\n      }\n    }\n  }\n`;\n\nconst CoursesTable = () => {\n  const revealCourses = useRef([]);\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allMarkdownRemark(\n            filter: { fileAbsolutePath: { regex: \"/courses/\" } }\n            sort: { fields: [frontmatter___date], order: DESC }\n          ) {\n            edges {\n              node {\n                frontmatter {\n                  subject\n                  no\n                  name\n                  term\n                  external\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const courses = data.allMarkdownRemark.edges;\n\n        return (\n          <StyledTableContainer>\n            <thead>\n              <tr>\n                <th>Subject</th>\n                <th>Number</th>\n                <th>Name</th>\n                <th>Term</th>\n                <th>Registrar</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {courses.map(({ node }, index) => {\n                const { subject, no, name, term, external } = node.frontmatter;\n                return (\n                  <tr key={index} ref={el => (revealCourses.current[index] = el)}>\n                    <td style={categoryColors[subject] || { fontWeight: 'bold' }}>{subject}</td>\n                    <td className=\"no\">{no}</td>\n                    <td className=\"name\">{name}</td>\n                    <td className=\"term\">{term}</td>\n                    <td className=\"links\">\n                      <div>\n                        {external && (\n                          <a href={external} aria-label=\"External Link\">\n                            <Icon name=\"External\" />\n                          </a>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </StyledTableContainer>\n        );\n      }}\n    />\n  );\n};\n\nCoursesTable.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default CoursesTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { Layout } from '@components';\nimport Skillset from './skillset';\nimport CoursesTable from './courses';\n\nconst StyledMainContainer = styled.main`\n  & > header {\n    margin-bottom: 100px;\n    text-align: center;\n\n    a {\n      &:hover,\n      &:focus {\n        cursor: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='48' viewport='0 0 100 100' style='fill:black;font-size:24px;'><text y='50%'>âš¡</text></svg>\")\n            20 0,\n          auto;\n      }\n    }\n  }\n\n  footer {\n    ${({ theme }) => theme.mixins.flexBetween};\n    width: 100%;\n    margin-top: 20px;\n  }\n`;\n\nconst SkillPage = ({ location }) => (\n  <Layout location={location}>\n    <Helmet title=\"Skills\" />\n\n    <StyledMainContainer>\n      <header>\n        <h1 className=\"big-heading\">Skills and Courses</h1>\n        <h3 className=\"subtitle\">\n          <p>This page contains detalied lists of my skills and the courses I've taken at UCLA!</p>\n        </h3>\n      </header>\n      <Skillset />\n      <CoursesTable />\n    </StyledMainContainer>\n  </Layout>\n);\n\nSkillPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default SkillPage;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\nimport { srConfig } from '@config';\nimport { KEY_CODES } from '@utils';\nimport sr from '@utils/sr';\nimport { usePrefersReducedMotion } from '@hooks';\n\nconst StyledSkillsetSection = styled.section`\n  max-width: 900px; //TODO: may want to increase this\n\n  .inner {\n    display: flex;\n\n    @media (max-width: 600px) {\n      display: block;\n    }\n\n    // Prevent container from jumping\n    @media (min-width: 700px) {\n      min-height: 340px;\n    }\n  }\n\n  a {\n    color: #1cf3ff;\n  }\n`;\n\nconst StyledTabList = styled.div`\n  position: relative;\n  z-index: 3;\n  width: max-content;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n\n  @media (max-width: 600px) {\n    display: flex;\n    overflow-x: auto;\n    width: calc(100% + 100px);\n    padding-left: 50px;\n    margin-left: -50px;\n    margin-bottom: 30px;\n  }\n  @media (max-width: 480px) {\n    width: calc(100% + 50px);\n    padding-left: 25px;\n    margin-left: -25px;\n  }\n\n  li {\n    &:first-of-type {\n      @media (max-width: 600px) {\n        margin-left: 50px;\n      }\n      @media (max-width: 480px) {\n        margin-left: 25px;\n      }\n    }\n    &:last-of-type {\n      @media (max-width: 600px) {\n        padding-right: 50px;\n      }\n      @media (max-width: 480px) {\n        padding-right: 25px;\n      }\n    }\n  }\n`;\n\nconst StyledTabButton = styled.button`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: var(--tab-height);\n  padding: 0 20px 2px;\n  border-left: 2px solid var(--lightest-navy);\n  background-color: transparent;\n  color: ${({ isActive }) => (isActive ? 'var(--green)' : 'var(--slate)')};\n  font-family: var(--font-mono);\n  font-size: var(--fz-xs);\n  text-align: left;\n  white-space: nowrap;\n\n  @media (max-width: 768px) {\n    padding: 0 15px 2px;\n  }\n  @media (max-width: 600px) {\n    min-width: 120px;\n    padding: 0 15px;\n    border-left: 0;\n    border-bottom: 2px solid var(--lightest-navy);\n    text-align: center;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--light-navy);\n  }\n`;\n\nconst StyledHighlight = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 2px;\n  height: var(--tab-height);\n  border-radius: var(--border-radius);\n  background: var(--green);\n  transform: translateY(calc(${({ activeTabId }) => activeTabId} * var(--tab-height)));\n  transition: transform 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);\n  transition-delay: 0.1s;\n\n  @media (max-width: 600px) {\n    top: auto;\n    bottom: 0;\n    width: 100%;\n    max-width: var(--tab-width);\n    height: 2px;\n    margin-left: 50px;\n    transform: translateX(calc(${({ activeTabId }) => activeTabId} * var(--tab-width)));\n  }\n  @media (max-width: 480px) {\n    margin-left: 25px;\n  }\n`;\n\nconst StyledTabPanels = styled.div`\n  position: relative;\n  width: 100%;\n  margin-left: 20px;\n\n  @media (max-width: 600px) {\n    margin-left: 0;\n  }\n`;\n\nconst StyledTabPanel = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 10px 5px;\n\n  h3 {\n    margin-bottom: 2px;\n    font-size: var(--fz-xxl);\n    font-weight: 500;\n    line-height: 1.3;\n\n    .skill {\n      color: var(--green);\n    }\n  }\n\n  .range {\n    margin-bottom: 25px;\n    color: var(--light-slate);\n    font-family: var(--font-mono);\n    font-size: var(--fz-xs);\n  }\n`;\n\nconst Skillset = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      Skillset: allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/skillset/\" } }\n        sort: { fields: [frontmatter___rank], order: ASC }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              rank\n              skill\n              url\n            }\n            html\n          }\n        }\n      }\n    }\n  `);\n\n  const SkillsetData = data.Skillset.edges;\n\n  const [activeTabId, setActiveTabId] = useState(0);\n  const [tabFocus, setTabFocus] = useState(null);\n  const tabs = useRef([]);\n  const revealContainer = useRef(null);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealContainer.current, srConfig());\n  }, []);\n\n  const focusTab = () => {\n    if (tabs.current[tabFocus]) {\n      tabs.current[tabFocus].focus();\n      return;\n    }\n    // If we're at the end, go to the start\n    if (tabFocus >= tabs.current.length) {\n      setTabFocus(0);\n    }\n    // If we're at the start, move to the end\n    if (tabFocus < 0) {\n      setTabFocus(tabs.current.length - 1);\n    }\n  };\n\n  // Only re-run the effect if tabFocus changes\n  useEffect(() => focusTab(), [tabFocus]);\n\n  // Focus on tabs when using up & down arrow keys\n  const onKeyDown = e => {\n    switch (e.key) {\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setTabFocus(tabFocus - 1);\n        break;\n      }\n\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setTabFocus(tabFocus + 1);\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  };\n\n  return (\n    <StyledSkillsetSection id=\"Skillset\" ref={revealContainer}>\n      <h2>My Skill Set</h2>\n\n      <div className=\"inner\">\n        <StyledTabList role=\"tablist\" aria-label=\"Job tabs\" onKeyDown={e => onKeyDown(e)}>\n          {SkillsetData &&\n            SkillsetData.map(({ node }, i) => {\n              const { skill } = node.frontmatter;\n              return (\n                <StyledTabButton\n                  key={i}\n                  isActive={activeTabId === i}\n                  onClick={() => setActiveTabId(i)}\n                  ref={el => (tabs.current[i] = el)}\n                  id={`tab-${i}`}\n                  role=\"tab\"\n                  tabIndex={activeTabId === i ? '0' : '-1'}\n                  aria-selected={activeTabId === i ? true : false}\n                  aria-controls={`panel-${i}`}\n                >\n                  <span>{skill}</span>\n                </StyledTabButton>\n              );\n            })}\n          <StyledHighlight activeTabId={activeTabId} />\n        </StyledTabList>\n\n        <StyledTabPanels>\n          {SkillsetData &&\n            SkillsetData.map(({ node }, i) => {\n              const { frontmatter, html } = node;\n              const { skill, url, rank } = frontmatter;\n\n              return (\n                <CSSTransition key={i} in={activeTabId === i} timeout={250} classNames=\"fade\">\n                  <StyledTabPanel\n                    id={`panel-${i}`}\n                    role=\"tabpanel\"\n                    tabIndex={activeTabId === i ? '0' : '-1'}\n                    aria-labelledby={`tab-${i}`}\n                    aria-hidden={activeTabId !== i}\n                    hidden={activeTabId !== i}\n                  >\n                    <h3>\n                      <span className=\"skill\">\n                        <a href={url} target=\"_blank\" className=\"inline-link\" rel=\"noreferrer\">\n                          {rank}\n                          {'. '}\n                          {skill}\n                        </a>\n                      </span>\n                    </h3>\n\n                    <div dangerouslySetInnerHTML={{ __html: html }} />\n                  </StyledTabPanel>\n                </CSSTransition>\n              );\n            })}\n        </StyledTabPanels>\n      </div>\n    </StyledSkillsetSection>\n  );\n};\n\nexport default Skillset;\n"],"names":["categoryColors","CS","color","fontWeight","Math","Stats","StyledTableContainer","styled","revealCourses","useRef","StaticQuery","query","render","data","courses","allMarkdownRemark","edges","map","index","node","frontmatter","subject","no","name","term","external","key","ref","el","current","style","className","href","StyledMainContainer","theme","mixins","flexBetween","location","title","StyledSkillsetSection","StyledTabList","StyledTabButton","isActive","StyledHighlight","activeTabId","StyledTabPanels","StyledTabPanel","SkillsetData","useStaticQuery","Skillset","useState","setActiveTabId","tabFocus","setTabFocus","tabs","revealContainer","prefersReducedMotion","usePrefersReducedMotion","useEffect","sr","srConfig","focus","length","id","role","onKeyDown","e","KEY_CODES","preventDefault","i","skill","onClick","tabIndex","html","url","rank","in","timeout","classNames","hidden","target","rel","dangerouslySetInnerHTML","__html"],"sourceRoot":""}